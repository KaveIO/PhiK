name: Wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
     - master
  release:
    types:
      - published

jobs:
  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Build SDist
      run: pipx run build --sdist

    - uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - uses: actions/setup-python@v3

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel

    - name: Build wheel
      run: python -m cibuildwheel --output-dir wheelhouse
      env:
        CIBW_ENVIRONMENT: MACOSX_DEPLOYMENT_TARGET=10.13
        CIBW_BUILD: 'cp37-* cp38-* cp39-* cp310-* cp311-*'
        CIBW_TEST_EXTRAS: test
        CIBW_TEST_COMMAND: pytest {project}/tests/phik_python/test_phik.py
        CIBW_ARCHS: "auto64"
        CIBW_ARCHS_MACOS: "x86_64 arm64"
        # Skip 32-bit builds
        CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux_x86_64"

    - name: Show files
      run: ls -lh wheelhouse
      shell: bash

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*.whl

  upload_all:
    needs: [build_wheels, make_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist

    - uses: pypa/gh-action-pypi-publish@v1.6.1
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
